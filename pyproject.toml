[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "goat-sdk"
version = "0.1.0"
description = "GOAT SDK - Unofficial SDK for GOAT"
authors = ["Igor Lessio <igor@aiflow.ml>"]
readme = "README.md"
license = "MIT"
packages = [{include = "goat_sdk"}]
keywords = ["defi", "nft", "blockchain", "trading", "crypto", "ethereum", "solana"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Investment",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3.9.1"
pydantic = "^2.5.2"
web3 = "^6.11.3"
solana = "^0.30.2"
anchorpy = "^0.16.0"
asyncio = "^3.4.3"
python-dotenv = "^1.0.0"
pandas = "^1.3.0"
numpy = "^1.21.0"
construct-typing = "^0.5.0"
prometheus-client = "^0.14.0"
opentelemetry-api = "^1.15.0"
opentelemetry-sdk = "^1.15.0"
tenacity = "^8.0.0"
cachetools = "4.2.2"
python-dateutil = "^2.8.0"
pytz = "^2022.1"
backoff = "^2.2.1"

# Optional dependencies for different blockchain platforms
solders = {version = ">=0.17.0,<0.18.0", optional = true}
eth-account = {version = "^0.9.0", optional = true}
eth-typing = {version = "^3.0.0", optional = true}
base58 = {version = "^2.1.0", optional = true}
py-solc-x = {version = "2.0.3", optional = true}

[tool.poetry.extras]
# Platform-specific extras
ethereum = ["web3", "eth-account", "eth-typing", "py-solc-x"]
solana = ["solana", "solders", "anchorpy", "base58"]

# Feature-specific extras
defi = ["web3", "eth-account", "eth-typing"]
nft = ["web3", "solana", "solders"]
full = ["web3", "eth-account", "eth-typing", "py-solc-x", "solana", "solders", "anchorpy", "base58"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
mypy = "^1.7.1"
ruff = "^0.1.7"
black = "^23.11.0"
pytest-timeout = "^2.1.0"
pytest-xdist = "^3.2.0"
aioresponses = "^0.7.4"
responses = "^0.23.0"
freezegun = "^1.2.0"
pytest-xprocess = ">=0.18.1,<0.19.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^6.0.0"
sphinx-rtd-theme = "^1.2.0"
sphinx-autodoc-typehints = "^1.22.0"
myst-parser = "^1.0.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=goat_sdk --cov-report=term-missing"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.ruff]
select = ["E", "F", "B", "I"]
ignore = []
line-length = 120
target-version = "py39"
fix = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
